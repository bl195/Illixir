{"ast":null,"code":"var _jsxFileName = \"/Users/brianli/Desktop/covid-19-app/covid-19-app/covid_19_hackathon_app/src/Components/Home/FacilityListPage.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport Button from '@material-ui/core/Button';\n\nconst Facility = props => /*#__PURE__*/React.createElement(\"tr\", {\n  className: \"list-container\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(\"td\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }\n}, props.facility.attributes.NAME), /*#__PURE__*/React.createElement(\"td\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }\n}, props.facility.attributes.ADDRESS, \", \", props.facility.attributes.CITY, \", \", props.facility.attributes.STATE), /*#__PURE__*/React.createElement(\"td\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }\n}, props.facility.geometry.y, \", \", props.facility.geometry.x), /*#__PURE__*/React.createElement(\"td\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }\n}, 69 * Math.sqrt(Math.pow(props.facility.geometry.y - props.user.userLatitude, 2) + Math.pow(props.facility.geometry.x - props.user.userLongitude, 2)), \" miles\"), /*#__PURE__*/React.createElement(\"td\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(Button, {\n  variant: \"outlined\",\n  color: \"primary\",\n  component: Link,\n  to: \"/information?state=\" + props.user.state + \"&city=\" + props.user.city + \"&streetAddress=\" + props.user.streetAddress + \"&zipcode=\" + props.user.zipcode + \"&facility=\" + props.user.facility + \"&userLongitude=\" + props.user.userLongitude + \"&userLatitude=\" + props.user.userLatitude + \"&latitude=\" + props.facility.attributes.LATITUDE + \"&longitude=\" + props.facility.attributes.LONGITUDE,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }\n}, \"Details\")));\n\nclass FacilityList extends Component {\n  constructor(props) {\n    super();\n    this.handleClick = this.handleClick.bind(this);\n    this.onChange = this.onChange.bind(this);\n    this.state = {\n      city: \"\",\n      state: \"\",\n      latitude: \"\",\n      longitude: \"\",\n      facility: \"\",\n      zipcode: \"\",\n      streetAddress: \"\",\n      facilities: [],\n      distance: \"\"\n    };\n  }\n\n  onChange(e) {\n    this.setState({\n      [e.target.name]: e.target.value / 69\n    });\n  }\n\n  handleClick() {\n    window.location = \"/facility?facility=\" + this.state.facility + \"&state=\" + this.state.state + \"&city=\" + this.state.city + \"&streetAddress=\" + this.state.streetAddress + \"&zipcode=\" + this.state.zipcode + \"&latitude=\" + this.state.latitude + \"&longitude=\" + this.state.longitude + \"&distance=\" + this.state.distance;\n  }\n\n  componentDidMount() {\n    const params = new URLSearchParams(this.props.location.search);\n    this.setState({\n      state: params.get(\"state\"),\n      city: params.get(\"city\"),\n      zipcode: params.get(\"zipcode\"),\n      streetAddress: params.get(\"streetAddress\"),\n      facility: params.get(\"facility\"),\n      latitude: params.get(\"latitude\"),\n      longitude: params.get(\"longitude\"),\n      distance: params.get(\"distance\")\n    });\n    axios.get('http://localhost:5000/api/' + params.get(\"facility\") + '/', {\n      params: {\n        lat: params.get(\"latitude\"),\n        long: params.get(\"longitude\"),\n        distance: params.get(\"distance\")\n      }\n    }).then(response => {\n      //const data = response.data.filter(d => d.attributes.CITY = params.get(\"city\") );\n      //const filter2 = filter1.filter(d => Math.abs(d.attributes.LONGITUDE - this.state.longitude) < .36 );\n      // const filter3 = filter2.sort(function(a, b) {\n      //   return a.attributes.LONGITUDE - b.attributes.LONGITUDE;\n      // });\n      // filter3.sort(function(a, b) {\n      //   return a.attributes.LATITUDE - b.attributes.LATITUDE;\n      // });\n      const data = response.data.filter(d => Math.sqrt(Math.pow(d.geometry.y - params.get(\"latitude\"), 2) + Math.pow(d.geometry.x - params.get(\"longitude\"), 2)) < this.state.distance);\n      data.sort(function (a, b) {\n        var distance_a = Math.sqrt(Math.pow(a.geometry.y - params.get(\"latitude\"), 2) + Math.pow(a.geometry.x - params.get(\"longitude\"), 2));\n        var distance_b = Math.sqrt(Math.pow(b.geometry.y - params.get(\"latitude\"), 2) + Math.pow(b.geometry.x - params.get(\"longitude\"), 2));\n        return distance_a - distance_b;\n      });\n      this.setState({\n        facilities: data\n      });\n    }).catch(error => {\n      console.log(\"ERROR: \" + error);\n    });\n  } //var geocoder = new window.google.maps.Geocoder();\n  //var address = params.get(\"streetAddress\") + \", \" + params.get(\"city\") + \", \" + params.get(\"state\") + \" \" + params.get(\"zipcode\");\n  //var address = params.get(\"streetAddress\") + \", \" + params.get(\"city\") + \", \" + params.get(\"state\") + \" \" + params.get(\"zipcode\")\n  //this.geoAddress(geocoder, address, params.get(\"facility\"));\n  // geoAddress(geocoder, address, facility){\n  //   alert(\"geocod\");\n  //   geocoder.geocode( { 'address': address}, function(results, status) {\n  //     if (status == window.google.maps.GeocoderStatus.OK) {\n  //       var lat = results[0].geometry.location.lat();\n  //       var long = results[0].geometry.location.lng();\n  //       alert(lat);\n  //       alert(long);\n  //       const backendRequest = \"http://localhost:5000/api/\"+facility+\"/\";\n  //       axios.get(backendRequest)\n  //         .then(response => {\n  //           alert(JSON.stringify(response.data));\n  //           const f1 = response.data.filter(d => Math.abs(d.attributes.LATITUDE - lat) < 2);\n  //           alert(\"F1: \"+ JSON.stringify(f1));\n  //\n  //           const f2 = f1.filter(d => Math.abs(d.attributes.LONGITUDE - long) < 2);\n  //           alert(\"F2 \"+ JSON.stringify(f2));\n  //           this.setState({\n  //             facilities: f2,\n  //           })\n  //         })\n  //         .catch(error => {\n  //           console.log(\"ERROR: \" + error);\n  //           return \"error\";\n  //         });\n  //     }\n  //     else{\n  //       alert(\"no\");\n  //     }\n  //   })\n  // }\n\n\n  facilitiesList() {\n    const user = {\n      city: this.state.city,\n      state: this.state.state,\n      userLatitude: this.state.latitude,\n      userLongitude: this.state.longitude,\n      facility: this.state.facility,\n      zipcode: this.state.zipcode,\n      streetAddress: this.state.streetAddress\n    }; //\n    // var geocoder = new window.google.maps.Geocoder();\n    // var address = this.state.streetAddress + \", \" + this.state.city + \", \" + this.state.state + \" \" + this.state.zipcode;\n    //\n    // alert(\"geocod\");\n    // const facilities = [];\n    // geocoder.geocode( { 'address': address}, function(results, status) {\n    //   if (status == window.google.maps.GeocoderStatus.OK) {\n    //     var lat = results[0].geometry.location.lat();\n    //     var long = results[0].geometry.location.lng();\n    //     alert(lat);\n    //     alert(long);\n    //     const backendRequest = \"http://localhost:5000/api/\"+facility+\"/\";\n    //     axios.get(backendRequest)\n    //       .then(response => {\n    //         alert(JSON.stringify(response.data));\n    //         const f1 = response.data.filter(d => Math.abs(d.attributes.LATITUDE - lat) < 2);\n    //         alert(\"F1: \"+ JSON.stringify(f1));\n    //\n    //         const f2 = f1.filter(d => Math.abs(d.attributes.LONGITUDE - long) < 2);\n    //         alert(\"F2 \"+ JSON.stringify(f2));\n    //         facilities = f2;\n    //       })\n    //       .catch(error => {\n    //         console.log(\"ERROR: \" + error);\n    //         return \"error\";\n    //       });\n    //   }\n    //   else{\n    //     alert(\"no\");\n    //   }\n    // })\n    //\n    // alert(JSON.string);\n\n    return this.state.facilities.map(current => {\n      return /*#__PURE__*/React.createElement(Facility, {\n        facility: current,\n        user: user,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 14\n        }\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"list-page\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"list-content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"list-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 9\n      }\n    }, \"#nearby!\"), this.state.latitude, \", \", this.state.longitude, /*#__PURE__*/React.createElement(\"form\", {\n      className: \"home-search\",\n      onSubmit: this.onSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"search-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 13\n      }\n    }, \"distance: \"), /*#__PURE__*/React.createElement(\"input\", {\n      name: \"distance\",\n      type: \"text\",\n      className: \"form-control\",\n      value: this.state.distance * 69,\n      onChange: this.onChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(Button, {\n      variant: \"outlined\",\n      color: \"primary\",\n      component: Link,\n      onClick: this.handleClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 11\n      }\n    }, \"refresh\"))), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"table\", {\n      className: \"table\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"thread\", {\n      className: \"thread-light\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 15\n      }\n    }, \"Name\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 15\n      }\n    }, \"Address\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 11\n      }\n    }, this.facilitiesList()))));\n  }\n\n}\n\nexport default FacilityList;","map":{"version":3,"sources":["/Users/brianli/Desktop/covid-19-app/covid-19-app/covid_19_hackathon_app/src/Components/Home/FacilityListPage.js"],"names":["React","Component","Link","axios","Button","Facility","props","facility","attributes","NAME","ADDRESS","CITY","STATE","geometry","y","x","Math","sqrt","pow","user","userLatitude","userLongitude","state","city","streetAddress","zipcode","LATITUDE","LONGITUDE","FacilityList","constructor","handleClick","bind","onChange","latitude","longitude","facilities","distance","e","setState","target","name","value","window","location","componentDidMount","params","URLSearchParams","search","get","lat","long","then","response","data","filter","d","sort","a","b","distance_a","distance_b","catch","error","console","log","facilitiesList","map","current","render","onSubmit"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAAgC,OAAhC;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;;AAEA,MAAMC,QAAQ,GAAGC,KAAK,iBACpB;AAAI,EAAA,SAAS,EAAC,gBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAMA,KAAK,CAACC,QAAN,CAAeC,UAAf,CAA0BC,IAAhC,CADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAMH,KAAK,CAACC,QAAN,CAAeC,UAAf,CAA0BE,OAAhC,QAA2CJ,KAAK,CAACC,QAAN,CAAeC,UAAf,CAA0BG,IAArE,QAA6EL,KAAK,CAACC,QAAN,CAAeC,UAAf,CAA0BI,KAAvG,CAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAMN,KAAK,CAACC,QAAN,CAAeM,QAAf,CAAwBC,CAA9B,QAAmCR,KAAK,CAACC,QAAN,CAAeM,QAAf,CAAwBE,CAA3D,CAHF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAK,KAAKC,IAAI,CAACC,IAAL,CAAUD,IAAI,CAACE,GAAL,CAASZ,KAAK,CAACC,QAAN,CAAeM,QAAf,CAAwBC,CAAxB,GAA4BR,KAAK,CAACa,IAAN,CAAWC,YAAhD,EAA8D,CAA9D,IAAmEJ,IAAI,CAACE,GAAL,CAASZ,KAAK,CAACC,QAAN,CAAeM,QAAf,CAAwBE,CAAxB,GAA4BT,KAAK,CAACa,IAAN,CAAWE,aAAhD,EAA+D,CAA/D,CAA7E,CAAV,WAJF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACA,oBAAC,MAAD;AAAQ,EAAA,OAAO,EAAC,UAAhB;AAA2B,EAAA,KAAK,EAAC,SAAjC;AAA2C,EAAA,SAAS,EAAEnB,IAAtD;AAA4D,EAAA,EAAE,EAC5D,wBAAsBI,KAAK,CAACa,IAAN,CAAWG,KAAjC,GACC,QADD,GACUhB,KAAK,CAACa,IAAN,CAAWI,IADrB,GAEC,iBAFD,GAEmBjB,KAAK,CAACa,IAAN,CAAWK,aAF9B,GAGC,WAHD,GAGalB,KAAK,CAACa,IAAN,CAAWM,OAHxB,GAIC,YAJD,GAIcnB,KAAK,CAACa,IAAN,CAAWZ,QAJzB,GAKC,iBALD,GAKmBD,KAAK,CAACa,IAAN,CAAWE,aAL9B,GAMC,gBAND,GAMkBf,KAAK,CAACa,IAAN,CAAWC,YAN7B,GAOC,YAPD,GAOcd,KAAK,CAACC,QAAN,CAAeC,UAAf,CAA0BkB,QAPxC,GAQC,aARD,GAQepB,KAAK,CAACC,QAAN,CAAeC,UAAf,CAA0BmB,SAT3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADA,CALF,CADF;;AAyBA,MAAMC,YAAN,SAA2B3B,SAA3B,CAAoC;AAClC4B,EAAAA,WAAW,CAACvB,KAAD,EAAQ;AACjB;AACA,SAAKwB,WAAL,GAAmB,KAAKA,WAAL,CAAiBC,IAAjB,CAAsB,IAAtB,CAAnB;AACA,SAAKC,QAAL,GAAgB,KAAKA,QAAL,CAAcD,IAAd,CAAmB,IAAnB,CAAhB;AACA,SAAKT,KAAL,GAAa;AACXC,MAAAA,IAAI,EAAE,EADK;AAEXD,MAAAA,KAAK,EAAE,EAFI;AAGXW,MAAAA,QAAQ,EAAE,EAHC;AAIXC,MAAAA,SAAS,EAAE,EAJA;AAKX3B,MAAAA,QAAQ,EAAE,EALC;AAMXkB,MAAAA,OAAO,EAAE,EANE;AAOXD,MAAAA,aAAa,EAAE,EAPJ;AAQXW,MAAAA,UAAU,EAAE,EARD;AASXC,MAAAA,QAAQ,EAAE;AATC,KAAb;AAWH;;AACCJ,EAAAA,QAAQ,CAACK,CAAD,EAAI;AACV,SAAKC,QAAL,CAAc;AAAE,OAACD,CAAC,CAACE,MAAF,CAASC,IAAV,GAAiBH,CAAC,CAACE,MAAF,CAASE,KAAT,GAAiB;AAApC,KAAd;AACD;;AACDX,EAAAA,WAAW,GAAE;AACXY,IAAAA,MAAM,CAACC,QAAP,GAAkB,wBAAsB,KAAKrB,KAAL,CAAWf,QAAjC,GACf,SADe,GACL,KAAKe,KAAL,CAAWA,KADN,GAEf,QAFe,GAEN,KAAKA,KAAL,CAAWC,IAFL,GAGf,iBAHe,GAGG,KAAKD,KAAL,CAAWE,aAHd,GAIf,WAJe,GAIH,KAAKF,KAAL,CAAWG,OAJR,GAKf,YALe,GAKF,KAAKH,KAAL,CAAWW,QALT,GAMf,aANe,GAMD,KAAKX,KAAL,CAAWY,SANV,GAOf,YAPe,GAOF,KAAKZ,KAAL,CAAWc,QAP3B;AAQD;;AAIDQ,EAAAA,iBAAiB,GAAE;AACjB,UAAMC,MAAM,GAAG,IAAIC,eAAJ,CAAoB,KAAKxC,KAAL,CAAWqC,QAAX,CAAoBI,MAAxC,CAAf;AACA,SAAKT,QAAL,CAAc;AACZhB,MAAAA,KAAK,EAAEuB,MAAM,CAACG,GAAP,CAAW,OAAX,CADK;AAEZzB,MAAAA,IAAI,EAAEsB,MAAM,CAACG,GAAP,CAAW,MAAX,CAFM;AAGZvB,MAAAA,OAAO,EAAEoB,MAAM,CAACG,GAAP,CAAW,SAAX,CAHG;AAIZxB,MAAAA,aAAa,EAAEqB,MAAM,CAACG,GAAP,CAAW,eAAX,CAJH;AAKZzC,MAAAA,QAAQ,EAAEsC,MAAM,CAACG,GAAP,CAAW,UAAX,CALE;AAMZf,MAAAA,QAAQ,EAAEY,MAAM,CAACG,GAAP,CAAW,UAAX,CANE;AAOZd,MAAAA,SAAS,EAAEW,MAAM,CAACG,GAAP,CAAW,WAAX,CAPC;AAQZZ,MAAAA,QAAQ,EAAES,MAAM,CAACG,GAAP,CAAW,UAAX;AARE,KAAd;AAYA7C,IAAAA,KAAK,CAAC6C,GAAN,CAAU,+BAA6BH,MAAM,CAACG,GAAP,CAAW,UAAX,CAA7B,GAAoD,GAA9D,EAAmE;AACjEH,MAAAA,MAAM,EAAE;AACNI,QAAAA,GAAG,EAAEJ,MAAM,CAACG,GAAP,CAAW,UAAX,CADC;AAENE,QAAAA,IAAI,EAAEL,MAAM,CAACG,GAAP,CAAW,WAAX,CAFA;AAGNZ,QAAAA,QAAQ,EAAES,MAAM,CAACG,GAAP,CAAW,UAAX;AAHJ;AADyD,KAAnE,EAOGG,IAPH,CAOQC,QAAQ,IAAI;AAChB;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAMC,IAAI,GAAGD,QAAQ,CAACC,IAAT,CAAcC,MAAd,CAAqBC,CAAC,IAAIvC,IAAI,CAACC,IAAL,CAAUD,IAAI,CAACE,GAAL,CAAUqC,CAAC,CAAC1C,QAAF,CAAWC,CAAX,GAAe+B,MAAM,CAACG,GAAP,CAAW,UAAX,CAAzB,EAAkD,CAAlD,IAAuDhC,IAAI,CAACE,GAAL,CAAUqC,CAAC,CAAC1C,QAAF,CAAWE,CAAX,GAAe8B,MAAM,CAACG,GAAP,CAAW,WAAX,CAAzB,EAAmD,CAAnD,CAAjE,IAA0H,KAAK1B,KAAL,CAAWc,QAA/J,CAAb;AACAiB,MAAAA,IAAI,CAACG,IAAL,CAAU,UAASC,CAAT,EAAYC,CAAZ,EAAe;AACvB,YAAIC,UAAU,GAAG3C,IAAI,CAACC,IAAL,CAAUD,IAAI,CAACE,GAAL,CAAUuC,CAAC,CAAC5C,QAAF,CAAWC,CAAX,GAAe+B,MAAM,CAACG,GAAP,CAAW,UAAX,CAAzB,EAAkD,CAAlD,IAAuDhC,IAAI,CAACE,GAAL,CAAUuC,CAAC,CAAC5C,QAAF,CAAWE,CAAX,GAAe8B,MAAM,CAACG,GAAP,CAAW,WAAX,CAAzB,EAAmD,CAAnD,CAAjE,CAAjB;AACA,YAAIY,UAAU,GAAG5C,IAAI,CAACC,IAAL,CAAUD,IAAI,CAACE,GAAL,CAAUwC,CAAC,CAAC7C,QAAF,CAAWC,CAAX,GAAe+B,MAAM,CAACG,GAAP,CAAW,UAAX,CAAzB,EAAkD,CAAlD,IAAuDhC,IAAI,CAACE,GAAL,CAAUwC,CAAC,CAAC7C,QAAF,CAAWE,CAAX,GAAe8B,MAAM,CAACG,GAAP,CAAW,WAAX,CAAzB,EAAmD,CAAnD,CAAjE,CAAjB;AACA,eAAOW,UAAU,GAAGC,UAApB;AACD,OAJD;AAKA,WAAKtB,QAAL,CAAc;AACZH,QAAAA,UAAU,EAAEkB;AADA,OAAd;AAGD,KA5BH,EA6BGQ,KA7BH,CA6BSC,KAAK,IAAI;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAYF,KAAxB;AACD,KA/BH;AAgCD,GA/EiC,CAiFhC;AACA;AACA;AACA;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGAG,EAAAA,cAAc,GAAG;AACf,UAAM9C,IAAI,GAAG;AACXI,MAAAA,IAAI,EAAE,KAAKD,KAAL,CAAWC,IADN;AAEXD,MAAAA,KAAK,EAAE,KAAKA,KAAL,CAAWA,KAFP;AAGXF,MAAAA,YAAY,EAAE,KAAKE,KAAL,CAAWW,QAHd;AAIXZ,MAAAA,aAAa,EAAE,KAAKC,KAAL,CAAWY,SAJf;AAKX3B,MAAAA,QAAQ,EAAE,KAAKe,KAAL,CAAWf,QALV;AAMXkB,MAAAA,OAAO,EAAE,KAAKH,KAAL,CAAWG,OANT;AAOXD,MAAAA,aAAa,EAAE,KAAKF,KAAL,CAAWE;AAPf,KAAb,CADe,CAUf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,WAAO,KAAKF,KAAL,CAAWa,UAAX,CAAsB+B,GAAtB,CAA0BC,OAAO,IAAI;AAC1C,0BAAO,oBAAC,QAAD;AAAU,QAAA,QAAQ,EAAEA,OAApB;AAA6B,QAAA,IAAI,EAAEhD,IAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD,KAFM,CAAP;AAGD;;AACDiD,EAAAA,MAAM,GAAE;AACN,wBACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAI,MAAA,SAAS,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAEG,KAAK9C,KAAL,CAAWW,QAFd,QAE0B,KAAKX,KAAL,CAAWY,SAFrC,eAGE;AAAM,MAAA,SAAS,EAAC,aAAhB;AAA8B,MAAA,QAAQ,EAAE,KAAKmC,QAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AACE,MAAA,IAAI,EAAC,UADP;AAEE,MAAA,IAAI,EAAC,MAFP;AAGE,MAAA,SAAS,EAAC,cAHZ;AAIE,MAAA,KAAK,EAAE,KAAK/C,KAAL,CAAWc,QAAX,GAAsB,EAJ/B;AAKE,MAAA,QAAQ,EAAE,KAAKJ,QALjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF,eAWE,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAC,UAAhB;AAA2B,MAAA,KAAK,EAAC,SAAjC;AAA2C,MAAA,SAAS,EAAE9B,IAAtD;AAA4D,MAAA,OAAO,EAAE,KAAK4B,WAA1E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAXF,CAHF,CADA,eAoBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAO,MAAA,SAAS,EAAC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAQ,MAAA,SAAS,EAAC,cAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAFF,CADF,CADF,eAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,KAAKmC,cAAL,EADJ,CAPF,CADF,CApBA,CADF;AAoCD;;AA5MiC;;AA+MpC,eAAerC,YAAf","sourcesContent":["import React, {Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport Button from '@material-ui/core/Button';\n\nconst Facility = props => (\n  <tr className='list-container'>\n    <td>{ props.facility.attributes.NAME }</td>\n    <td>{ props.facility.attributes.ADDRESS}, {props.facility.attributes.CITY}, {props.facility.attributes.STATE }</td>\n    <td>{ props.facility.geometry.y}, {props.facility.geometry.x}</td>\n    <td>{69 * Math.sqrt(Math.pow(props.facility.geometry.y - props.user.userLatitude, 2) + Math.pow(props.facility.geometry.x - props.user.userLongitude, 2))} miles</td>\n    <td>\n    <Button variant=\"outlined\" color=\"primary\" component={Link} to={\n      \"/information?state=\"+props.user.state\n      +\"&city=\"+props.user.city\n      +\"&streetAddress=\"+props.user.streetAddress\n      +\"&zipcode=\"+props.user.zipcode\n      +\"&facility=\"+props.user.facility\n      +\"&userLongitude=\"+props.user.userLongitude\n      +\"&userLatitude=\"+props.user.userLatitude\n      +\"&latitude=\"+props.facility.attributes.LATITUDE\n      +\"&longitude=\"+props.facility.attributes.LONGITUDE\n    }>\n    Details\n    </Button>\n    </td>\n  </tr>\n)\n\n\nclass FacilityList extends Component{\n  constructor(props) {\n    super();\n    this.handleClick = this.handleClick.bind(this);\n    this.onChange = this.onChange.bind(this);\n    this.state = {\n      city: \"\",\n      state: \"\",\n      latitude: \"\",\n      longitude: \"\",\n      facility: \"\",\n      zipcode: \"\",\n      streetAddress: \"\",\n      facilities: [],\n      distance: \"\",\n    };\n}\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value / 69 });\n  }\n  handleClick(){\n    window.location = \"/facility?facility=\"+this.state.facility\n      +\"&state=\"+this.state.state\n      +\"&city=\"+this.state.city\n      +\"&streetAddress=\"+this.state.streetAddress\n      +\"&zipcode=\"+this.state.zipcode\n      +\"&latitude=\"+this.state.latitude\n      +\"&longitude=\"+this.state.longitude\n      +\"&distance=\"+this.state.distance\n  }\n\n\n\n  componentDidMount(){\n    const params = new URLSearchParams(this.props.location.search);\n    this.setState({\n      state: params.get(\"state\"),\n      city: params.get(\"city\"),\n      zipcode: params.get(\"zipcode\"),\n      streetAddress: params.get(\"streetAddress\"),\n      facility: params.get(\"facility\"),\n      latitude: params.get(\"latitude\"),\n      longitude: params.get(\"longitude\"),\n      distance: params.get(\"distance\")\n    })\n\n\n    axios.get('http://localhost:5000/api/'+params.get(\"facility\")+'/', {\n      params: {\n        lat: params.get(\"latitude\"),\n        long: params.get(\"longitude\"),\n        distance: params.get(\"distance\"),\n      }\n    })\n      .then(response => {\n        //const data = response.data.filter(d => d.attributes.CITY = params.get(\"city\") );\n\n\n\n        //const filter2 = filter1.filter(d => Math.abs(d.attributes.LONGITUDE - this.state.longitude) < .36 );\n        // const filter3 = filter2.sort(function(a, b) {\n        //   return a.attributes.LONGITUDE - b.attributes.LONGITUDE;\n        // });\n        // filter3.sort(function(a, b) {\n        //   return a.attributes.LATITUDE - b.attributes.LATITUDE;\n        // });\n        const data = response.data.filter(d => Math.sqrt(Math.pow((d.geometry.y - params.get(\"latitude\")), 2) + Math.pow((d.geometry.x - params.get(\"longitude\")), 2)) < this.state.distance);\n        data.sort(function(a, b) {\n          var distance_a = Math.sqrt(Math.pow((a.geometry.y - params.get(\"latitude\")), 2) + Math.pow((a.geometry.x - params.get(\"longitude\")), 2));\n          var distance_b = Math.sqrt(Math.pow((b.geometry.y - params.get(\"latitude\")), 2) + Math.pow((b.geometry.x - params.get(\"longitude\")), 2));\n          return distance_a - distance_b;\n        });\n        this.setState({\n          facilities: data,\n        })\n      })\n      .catch(error => {\n        console.log(\"ERROR: \" + error);\n      });\n  }\n\n    //var geocoder = new window.google.maps.Geocoder();\n    //var address = params.get(\"streetAddress\") + \", \" + params.get(\"city\") + \", \" + params.get(\"state\") + \" \" + params.get(\"zipcode\");\n    //var address = params.get(\"streetAddress\") + \", \" + params.get(\"city\") + \", \" + params.get(\"state\") + \" \" + params.get(\"zipcode\")\n    //this.geoAddress(geocoder, address, params.get(\"facility\"));\n\n  // geoAddress(geocoder, address, facility){\n  //   alert(\"geocod\");\n  //   geocoder.geocode( { 'address': address}, function(results, status) {\n  //     if (status == window.google.maps.GeocoderStatus.OK) {\n  //       var lat = results[0].geometry.location.lat();\n  //       var long = results[0].geometry.location.lng();\n  //       alert(lat);\n  //       alert(long);\n  //       const backendRequest = \"http://localhost:5000/api/\"+facility+\"/\";\n  //       axios.get(backendRequest)\n  //         .then(response => {\n  //           alert(JSON.stringify(response.data));\n  //           const f1 = response.data.filter(d => Math.abs(d.attributes.LATITUDE - lat) < 2);\n  //           alert(\"F1: \"+ JSON.stringify(f1));\n  //\n  //           const f2 = f1.filter(d => Math.abs(d.attributes.LONGITUDE - long) < 2);\n  //           alert(\"F2 \"+ JSON.stringify(f2));\n  //           this.setState({\n  //             facilities: f2,\n  //           })\n  //         })\n  //         .catch(error => {\n  //           console.log(\"ERROR: \" + error);\n  //           return \"error\";\n  //         });\n  //     }\n  //     else{\n  //       alert(\"no\");\n  //     }\n  //   })\n  // }\n\n\n  facilitiesList() {\n    const user = {\n      city: this.state.city,\n      state: this.state.state,\n      userLatitude: this.state.latitude,\n      userLongitude: this.state.longitude,\n      facility: this.state.facility,\n      zipcode: this.state.zipcode,\n      streetAddress: this.state.streetAddress,\n    }\n    //\n    // var geocoder = new window.google.maps.Geocoder();\n    // var address = this.state.streetAddress + \", \" + this.state.city + \", \" + this.state.state + \" \" + this.state.zipcode;\n    //\n    // alert(\"geocod\");\n    // const facilities = [];\n    // geocoder.geocode( { 'address': address}, function(results, status) {\n    //   if (status == window.google.maps.GeocoderStatus.OK) {\n    //     var lat = results[0].geometry.location.lat();\n    //     var long = results[0].geometry.location.lng();\n    //     alert(lat);\n    //     alert(long);\n    //     const backendRequest = \"http://localhost:5000/api/\"+facility+\"/\";\n    //     axios.get(backendRequest)\n    //       .then(response => {\n    //         alert(JSON.stringify(response.data));\n    //         const f1 = response.data.filter(d => Math.abs(d.attributes.LATITUDE - lat) < 2);\n    //         alert(\"F1: \"+ JSON.stringify(f1));\n    //\n    //         const f2 = f1.filter(d => Math.abs(d.attributes.LONGITUDE - long) < 2);\n    //         alert(\"F2 \"+ JSON.stringify(f2));\n    //         facilities = f2;\n    //       })\n    //       .catch(error => {\n    //         console.log(\"ERROR: \" + error);\n    //         return \"error\";\n    //       });\n    //   }\n    //   else{\n    //     alert(\"no\");\n    //   }\n    // })\n    //\n    // alert(JSON.string);\n    return this.state.facilities.map(current => {\n      return <Facility facility={current} user={user}/>;\n    })\n  }\n  render(){\n    return(\n      <div className=\"list-page\">\n      <div className=\"list-content\">\n        <h1 className=\"list-title\">#nearby!</h1>\n        {this.state.latitude}, {this.state.longitude}\n        <form className=\"home-search\" onSubmit={this.onSubmit}>\n          <div className=\"form-group\">\n            <div className=\"search-title\">distance: </div>\n            <input\n              name=\"distance\"\n              type=\"text\"\n              className=\"form-control\"\n              value={this.state.distance * 69}\n              onChange={this.onChange}\n            />\n          </div>\n          <Button variant=\"outlined\" color=\"primary\" component={Link} onClick={this.handleClick}>\n            refresh\n          </Button>\n        </form>\n      </div>\n      <div>\n        <table className=\"table\">\n          <thread className=\"thread-light\">\n            <tr>\n              <th>Name</th>\n              <th>Address</th>\n            </tr>\n          </thread>\n          <tbody>\n            { this.facilitiesList() }\n          </tbody>\n        </table>\n      </div>\n      </div>\n    )\n  }\n}\n\nexport default FacilityList\n"]},"metadata":{},"sourceType":"module"}