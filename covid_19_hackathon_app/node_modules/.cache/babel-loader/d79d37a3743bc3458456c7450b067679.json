{"ast":null,"code":"var _jsxFileName = \"/Users/brianli/Desktop/covid-19-app/covid-19-app/covid_19_hackathon_app/src/Components/Home/FacilityListPage.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport Button from '@material-ui/core/Button';\n\nconst Facility = props => /*#__PURE__*/React.createElement(\"tr\", {\n  className: \"list-container\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(\"td\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }\n}, props.facility.attributes.NAME), /*#__PURE__*/React.createElement(\"td\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }\n}, props.facility.attributes.ADDRESS, \", \", props.facility.attributes.CITY, \", \", props.facility.attributes.STATE), /*#__PURE__*/React.createElement(\"td\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(Button, {\n  variant: \"outlined\",\n  color: \"primary\",\n  component: Link,\n  to: \"/information?state=\" + props.user.state + \"&city=\" + props.user.city + \"&streetAddress=\" + props.user.streetAddress + \"&zipcode=\" + props.user.zipcode + \"&facility=\" + props.user.facility + \"&userLongitude=\" + props.user.userLongitude + \"&userLatitude=\" + props.user.userLatitude + \"&latitude=\" + props.facility.attributes.LATITUDE + \"&longitude=\" + props.facility.attributes.LONGITUDE,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }\n}, \"Details\")));\n\nclass FacilityList extends Component {\n  constructor(props) {\n    super(); //this.geoAddress = this.geoAddress.bind(this);\n    //this.componentDidMount = this.componentDidMount.bind(this);\n\n    this.state = {\n      city: \"\",\n      state: \"\",\n      latitude: \"\",\n      longitude: \"\",\n      facility: \"\",\n      zipcode: \"\",\n      streetAddress: \"\",\n      facilities: []\n    };\n  }\n\n  componentDidMount() {\n    const params = new URLSearchParams(this.props.location.search);\n    this.setState({\n      state: params.get(\"state\"),\n      city: params.get(\"city\"),\n      zipcode: params.get(\"zipcode\"),\n      streetAddress: params.get(\"streetAddress\"),\n      facility: params.get(\"facility\")\n    });\n    axios.get('http://localhost:5000/api/' + params.get(\"facility\") + '/').then(response => {\n      const filter1 = response.data.filter(d => d.attributes.STATE === this.state.state);\n      this.setState({\n        facilities: filter1\n      });\n    }).catch(error => {\n      console.log(\"ERROR: \" + error);\n    });\n  } //var geocoder = new window.google.maps.Geocoder();\n  //var address = params.get(\"streetAddress\") + \", \" + params.get(\"city\") + \", \" + params.get(\"state\") + \" \" + params.get(\"zipcode\");\n  //var address = params.get(\"streetAddress\") + \", \" + params.get(\"city\") + \", \" + params.get(\"state\") + \" \" + params.get(\"zipcode\")\n  //this.geoAddress(geocoder, address, params.get(\"facility\"));\n  // geoAddress(geocoder, address, facility){\n  //   alert(\"geocod\");\n  //   geocoder.geocode( { 'address': address}, function(results, status) {\n  //     if (status == window.google.maps.GeocoderStatus.OK) {\n  //       var lat = results[0].geometry.location.lat();\n  //       var long = results[0].geometry.location.lng();\n  //       alert(lat);\n  //       alert(long);\n  //       const backendRequest = \"http://localhost:5000/api/\"+facility+\"/\";\n  //       axios.get(backendRequest)\n  //         .then(response => {\n  //           alert(JSON.stringify(response.data));\n  //           const f1 = response.data.filter(d => Math.abs(d.attributes.LATITUDE - lat) < 2);\n  //           alert(\"F1: \"+ JSON.stringify(f1));\n  //\n  //           const f2 = f1.filter(d => Math.abs(d.attributes.LONGITUDE - long) < 2);\n  //           alert(\"F2 \"+ JSON.stringify(f2));\n  //           this.setState({\n  //             facilities: f2,\n  //           })\n  //         })\n  //         .catch(error => {\n  //           console.log(\"ERROR: \" + error);\n  //           return \"error\";\n  //         });\n  //     }\n  //     else{\n  //       alert(\"no\");\n  //     }\n  //   })\n  // }\n\n\n  facilitiesList() {\n    const user = {\n      city: this.state.city,\n      state: this.state.state,\n      userLatitude: this.state.latitude,\n      userLongitude: this.state.longitude,\n      facility: this.state.facility,\n      zipcode: this.state.zipcode,\n      streetAddress: this.state.streetAddress\n    }; //\n    // var geocoder = new window.google.maps.Geocoder();\n    // var address = this.state.streetAddress + \", \" + this.state.city + \", \" + this.state.state + \" \" + this.state.zipcode;\n    //\n    // alert(\"geocod\");\n    // const facilities = [];\n    // geocoder.geocode( { 'address': address}, function(results, status) {\n    //   if (status == window.google.maps.GeocoderStatus.OK) {\n    //     var lat = results[0].geometry.location.lat();\n    //     var long = results[0].geometry.location.lng();\n    //     alert(lat);\n    //     alert(long);\n    //     const backendRequest = \"http://localhost:5000/api/\"+facility+\"/\";\n    //     axios.get(backendRequest)\n    //       .then(response => {\n    //         alert(JSON.stringify(response.data));\n    //         const f1 = response.data.filter(d => Math.abs(d.attributes.LATITUDE - lat) < 2);\n    //         alert(\"F1: \"+ JSON.stringify(f1));\n    //\n    //         const f2 = f1.filter(d => Math.abs(d.attributes.LONGITUDE - long) < 2);\n    //         alert(\"F2 \"+ JSON.stringify(f2));\n    //         facilities = f2;\n    //       })\n    //       .catch(error => {\n    //         console.log(\"ERROR: \" + error);\n    //         return \"error\";\n    //       });\n    //   }\n    //   else{\n    //     alert(\"no\");\n    //   }\n    // })\n    //\n    // alert(JSON.string);\n\n    return this.state.facilities.map(current => {\n      return /*#__PURE__*/React.createElement(Facility, {\n        facility: current,\n        user: user,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 14\n        }\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"list-page\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"list-content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"list-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }\n    }, \"#nearby!\")), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"table\", {\n      className: \"table\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"thread\", {\n      className: \"thread-light\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 15\n      }\n    }, \"Name\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 15\n      }\n    }, \"Address\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 11\n      }\n    }, this.facilitiesList()))));\n  }\n\n}\n\nexport default FacilityList;","map":{"version":3,"sources":["/Users/brianli/Desktop/covid-19-app/covid-19-app/covid_19_hackathon_app/src/Components/Home/FacilityListPage.js"],"names":["React","Component","Link","axios","Button","Facility","props","facility","attributes","NAME","ADDRESS","CITY","STATE","user","state","city","streetAddress","zipcode","userLongitude","userLatitude","LATITUDE","LONGITUDE","FacilityList","constructor","latitude","longitude","facilities","componentDidMount","params","URLSearchParams","location","search","setState","get","then","response","filter1","data","filter","d","catch","error","console","log","facilitiesList","map","current","render"],"mappings":"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","sourcesContent":["import React, {Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport Button from '@material-ui/core/Button';\n\nconst Facility = props => (\n  <tr className='list-container'>\n    <td>{ props.facility.attributes.NAME }</td>\n    <td>{ props.facility.attributes.ADDRESS}, {props.facility.attributes.CITY}, {props.facility.attributes.STATE }</td>\n    <td>\n    <Button variant=\"outlined\" color=\"primary\" component={Link} to={\n      \"/information?state=\"+props.user.state\n      +\"&city=\"+props.user.city\n      +\"&streetAddress=\"+props.user.streetAddress\n      +\"&zipcode=\"+props.user.zipcode\n      +\"&facility=\"+props.user.facility\n      +\"&userLongitude=\"+props.user.userLongitude\n      +\"&userLatitude=\"+props.user.userLatitude\n      +\"&latitude=\"+props.facility.attributes.LATITUDE\n      +\"&longitude=\"+props.facility.attributes.LONGITUDE\n    }>\n    Details\n    </Button>\n    </td>\n  </tr>\n)\n\nclass FacilityList extends Component{\n  constructor(props) {\n    super();\n    //this.geoAddress = this.geoAddress.bind(this);\n    //this.componentDidMount = this.componentDidMount.bind(this);\n\n    this.state = {\n      city: \"\",\n      state: \"\",\n      latitude: \"\",\n      longitude: \"\",\n      facility: \"\",\n      zipcode: \"\",\n      streetAddress: \"\",\n      facilities: [],\n    };\n  }\n  componentDidMount(){\n    const params = new URLSearchParams(this.props.location.search);\n    this.setState({\n      state: params.get(\"state\"),\n      city: params.get(\"city\"),\n      zipcode: params.get(\"zipcode\"),\n      streetAddress: params.get(\"streetAddress\"),\n      facility: params.get(\"facility\"),\n    })\n    axios.get('http://localhost:5000/api/'+params.get(\"facility\")+'/')\n      .then(response => {\n        const filter1 = response.data.filter(d => d.attributes.STATE === this.state.state);\n        this.setState({\n          facilities: filter1,\n        })\n      })\n      .catch(error => {\n        console.log(\"ERROR: \" + error);\n      });\n  }\n\n    //var geocoder = new window.google.maps.Geocoder();\n    //var address = params.get(\"streetAddress\") + \", \" + params.get(\"city\") + \", \" + params.get(\"state\") + \" \" + params.get(\"zipcode\");\n    //var address = params.get(\"streetAddress\") + \", \" + params.get(\"city\") + \", \" + params.get(\"state\") + \" \" + params.get(\"zipcode\")\n    //this.geoAddress(geocoder, address, params.get(\"facility\"));\n\n  // geoAddress(geocoder, address, facility){\n  //   alert(\"geocod\");\n  //   geocoder.geocode( { 'address': address}, function(results, status) {\n  //     if (status == window.google.maps.GeocoderStatus.OK) {\n  //       var lat = results[0].geometry.location.lat();\n  //       var long = results[0].geometry.location.lng();\n  //       alert(lat);\n  //       alert(long);\n  //       const backendRequest = \"http://localhost:5000/api/\"+facility+\"/\";\n  //       axios.get(backendRequest)\n  //         .then(response => {\n  //           alert(JSON.stringify(response.data));\n  //           const f1 = response.data.filter(d => Math.abs(d.attributes.LATITUDE - lat) < 2);\n  //           alert(\"F1: \"+ JSON.stringify(f1));\n  //\n  //           const f2 = f1.filter(d => Math.abs(d.attributes.LONGITUDE - long) < 2);\n  //           alert(\"F2 \"+ JSON.stringify(f2));\n  //           this.setState({\n  //             facilities: f2,\n  //           })\n  //         })\n  //         .catch(error => {\n  //           console.log(\"ERROR: \" + error);\n  //           return \"error\";\n  //         });\n  //     }\n  //     else{\n  //       alert(\"no\");\n  //     }\n  //   })\n  // }\n\n\n  facilitiesList() {\n    const user = {\n      city: this.state.city,\n      state: this.state.state,\n      userLatitude: this.state.latitude,\n      userLongitude: this.state.longitude,\n      facility: this.state.facility,\n      zipcode: this.state.zipcode,\n      streetAddress: this.state.streetAddress,\n    }\n    //\n    // var geocoder = new window.google.maps.Geocoder();\n    // var address = this.state.streetAddress + \", \" + this.state.city + \", \" + this.state.state + \" \" + this.state.zipcode;\n    //\n    // alert(\"geocod\");\n    // const facilities = [];\n    // geocoder.geocode( { 'address': address}, function(results, status) {\n    //   if (status == window.google.maps.GeocoderStatus.OK) {\n    //     var lat = results[0].geometry.location.lat();\n    //     var long = results[0].geometry.location.lng();\n    //     alert(lat);\n    //     alert(long);\n    //     const backendRequest = \"http://localhost:5000/api/\"+facility+\"/\";\n    //     axios.get(backendRequest)\n    //       .then(response => {\n    //         alert(JSON.stringify(response.data));\n    //         const f1 = response.data.filter(d => Math.abs(d.attributes.LATITUDE - lat) < 2);\n    //         alert(\"F1: \"+ JSON.stringify(f1));\n    //\n    //         const f2 = f1.filter(d => Math.abs(d.attributes.LONGITUDE - long) < 2);\n    //         alert(\"F2 \"+ JSON.stringify(f2));\n    //         facilities = f2;\n    //       })\n    //       .catch(error => {\n    //         console.log(\"ERROR: \" + error);\n    //         return \"error\";\n    //       });\n    //   }\n    //   else{\n    //     alert(\"no\");\n    //   }\n    // })\n    //\n    // alert(JSON.string);\n    return this.state.facilities.map(current => {\n      return <Facility facility={current} user={user}/>;\n    })\n  }\n  render(){\n    return(\n      <div className=\"list-page\">\n      <div className=\"list-content\">\n        <h1 className=\"list-title\">#nearby!</h1>\n      </div>\n      <div>\n        <table className=\"table\">\n          <thread className=\"thread-light\">\n            <tr>\n              <th>Name</th>\n              <th>Address</th>\n            </tr>\n          </thread>\n          <tbody>\n            { this.facilitiesList() }\n          </tbody>\n        </table>\n      </div>\n      </div>\n    )\n  }\n}\n\nexport default FacilityList\n"]},"metadata":{},"sourceType":"module"}