{"ast":null,"code":"/**\n * @license\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n;\n\nvar utils = require('../internal/convert');\n\nvar v = require('../internal/validate');\n/**\n * Makes an elevation request.\n *\n * @memberof! GoogleMapsClient\n * @name GoogleMapsClient.elevation\n * @function\n * @param {Object} query\n * @param {LatLng[]} query.locations\n * @param {ResponseCallback} callback Callback function for handling the result\n * @return {RequestHandle}\n */\n\n\nexports.elevation = {\n  url: 'https://maps.googleapis.com/maps/api/elevation/json',\n  validator: v.object({\n    locations: utils.arrayOf(utils.latLng),\n    retryOptions: v.optional(utils.retryOptions),\n    timeout: v.optional(v.number)\n  })\n};\n/**\n * Makes an elevation-along-path request.\n *\n * @memberof! GoogleMapsClient\n * @name GoogleMapsClient.elevationAlongPath\n * @function\n * @param {Object} query\n * @param {LatLng[]|string} query.path\n * @param {number} query.samples\n * @param {ResponseCallback} callback Callback function for handling the result\n * @return {RequestHandle}\n */\n\nexports.elevationAlongPath = {\n  url: 'https://maps.googleapis.com/maps/api/elevation/json',\n  validator: v.object({\n    path: function (path) {\n      if (typeof path == 'string') {\n        return 'enc:' + path;\n      } else {\n        return utils.arrayOf(utils.latLng)(path);\n      }\n    },\n    samples: v.number,\n    retryOptions: v.optional(utils.retryOptions),\n    timeout: v.optional(v.number)\n  })\n};","map":{"version":3,"sources":["/Users/brianli/Desktop/covid-19-app/covid-19-app/covid_19_hackathon_app/node_modules/@google/maps/lib/apis/elevation.js"],"names":["utils","require","v","exports","elevation","url","validator","object","locations","arrayOf","latLng","retryOptions","optional","timeout","number","elevationAlongPath","path","samples"],"mappings":"AAAA;;;;;;;;;;;;;;;;AAeG;;AAEH,IAAIA,KAAK,GAAGC,OAAO,CAAC,qBAAD,CAAnB;;AACA,IAAIC,CAAC,GAAGD,OAAO,CAAC,sBAAD,CAAf;AAEA;;;;;;;;;;;;;AAWAE,OAAO,CAACC,SAAR,GAAoB;AAClBC,EAAAA,GAAG,EAAE,qDADa;AAElBC,EAAAA,SAAS,EAAEJ,CAAC,CAACK,MAAF,CAAS;AAClBC,IAAAA,SAAS,EAAER,KAAK,CAACS,OAAN,CAAcT,KAAK,CAACU,MAApB,CADO;AAElBC,IAAAA,YAAY,EAAET,CAAC,CAACU,QAAF,CAAWZ,KAAK,CAACW,YAAjB,CAFI;AAGlBE,IAAAA,OAAO,EAAEX,CAAC,CAACU,QAAF,CAAWV,CAAC,CAACY,MAAb;AAHS,GAAT;AAFO,CAApB;AASA;;;;;;;;;;;;;AAYAX,OAAO,CAACY,kBAAR,GAA6B;AAC3BV,EAAAA,GAAG,EAAE,qDADsB;AAE3BC,EAAAA,SAAS,EAAEJ,CAAC,CAACK,MAAF,CAAS;AAClBS,IAAAA,IAAI,EAAE,UAASA,IAAT,EAAe;AACnB,UAAI,OAAOA,IAAP,IAAe,QAAnB,EAA6B;AAC3B,eAAO,SAASA,IAAhB;AACD,OAFD,MAEO;AACL,eAAOhB,KAAK,CAACS,OAAN,CAAcT,KAAK,CAACU,MAApB,EAA4BM,IAA5B,CAAP;AACD;AACF,KAPiB;AAQlBC,IAAAA,OAAO,EAAEf,CAAC,CAACY,MARO;AASlBH,IAAAA,YAAY,EAAET,CAAC,CAACU,QAAF,CAAWZ,KAAK,CAACW,YAAjB,CATI;AAUlBE,IAAAA,OAAO,EAAEX,CAAC,CAACU,QAAF,CAAWV,CAAC,CAACY,MAAb;AAVS,GAAT;AAFgB,CAA7B","sourcesContent":["/**\n * @license\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */;\n\nvar utils = require('../internal/convert');\nvar v = require('../internal/validate');\n\n/**\n * Makes an elevation request.\n *\n * @memberof! GoogleMapsClient\n * @name GoogleMapsClient.elevation\n * @function\n * @param {Object} query\n * @param {LatLng[]} query.locations\n * @param {ResponseCallback} callback Callback function for handling the result\n * @return {RequestHandle}\n */\nexports.elevation = {\n  url: 'https://maps.googleapis.com/maps/api/elevation/json',\n  validator: v.object({\n    locations: utils.arrayOf(utils.latLng),\n    retryOptions: v.optional(utils.retryOptions),\n    timeout: v.optional(v.number)\n  })\n};\n\n/**\n * Makes an elevation-along-path request.\n *\n * @memberof! GoogleMapsClient\n * @name GoogleMapsClient.elevationAlongPath\n * @function\n * @param {Object} query\n * @param {LatLng[]|string} query.path\n * @param {number} query.samples\n * @param {ResponseCallback} callback Callback function for handling the result\n * @return {RequestHandle}\n */\nexports.elevationAlongPath = {\n  url: 'https://maps.googleapis.com/maps/api/elevation/json',\n  validator: v.object({\n    path: function(path) {\n      if (typeof path == 'string') {\n        return 'enc:' + path;\n      } else {\n        return utils.arrayOf(utils.latLng)(path);\n      }\n    },\n    samples: v.number,\n    retryOptions: v.optional(utils.retryOptions),\n    timeout: v.optional(v.number)\n  })\n};\n"]},"metadata":{},"sourceType":"script"}