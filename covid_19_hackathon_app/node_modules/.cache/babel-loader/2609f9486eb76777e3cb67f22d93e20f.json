{"ast":null,"code":"var _jsxFileName = \"/Users/brianli/Desktop/covid-19-app/covid-19-app/covid_19_hackathon_app/src/Components/Auth/register.js\";\nimport React, { Component } from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { registerUser } from \"../../actions/authActions\";\nimport classnames from \"classnames\";\n\nclass Register extends Component {\n  constructor() {\n    super();\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n    this.autocomplete = null;\n    this.handlePlaceSelect = this.handlePlaceSelect.bind(this);\n    this.state = {\n      username: \"\",\n      email: \"\",\n      streetAddress: \"\",\n      city: \"\",\n      state: \"\",\n      zipcode: \"\",\n      password: \"\",\n      confirm: \"\",\n      errors: {}\n    };\n  }\n\n  componentDidMount() {\n    this.autocomplete = new window.google.maps.places.Autocomplete(document.getElementById('autocomplete'), {});\n    this.autocomplete.addListener(\"place_changed\", this.handlePlaceSelect); // If logged in and user navigates to Register page, should redirect them to dashboard\n\n    if (this.props.auth.isAuthenticated) {\n      this.props.history.push(\"/login\");\n      window.location = '/login';\n    }\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    if (nextProps.errors) {\n      return true;\n    } else return null;\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.props.auth.isAuthenticated) {\n      this.props.history.push(\"/login\");\n      window.location = '/login';\n    }\n  }\n\n  handlePlaceSelect() {\n    let addressObject = this.autocomplete.getPlace();\n    let address = addressObject.address_components;\n    var results = [];\n    var city = \"locality\";\n    var state = \"administrative_area_level_1\";\n    var zip = \"postal_code\";\n\n    for (var i = 0; i < address.length; i++) {\n      if (address[i].types[0] == city) {\n        results.push(address[i].long_name);\n      } else if (address[i].types[0] == state) {\n        results.push(address[i].short_name);\n      } else if (address[i].types[0] == zip) {\n        results.push(address[i].long_name);\n      }\n    }\n\n    this.setState({\n      streetAddress: `${address[0].long_name} ${address[1].long_name}`,\n      city: results[0],\n      state: results[1],\n      zipcode: results[2]\n    });\n  }\n\n  onChange(e) {\n    this.setState({\n      [e.target.id]: e.target.value\n    });\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n    const newUser = {\n      username: this.state.username,\n      email: this.state.email,\n      streetAddress: this.state.streetAddress,\n      city: this.state.city,\n      state: this.state.state,\n      zipcode: this.state.zipcode,\n      password: this.state.password,\n      confirm: this.state.confirm\n    };\n    this.props.registerUser(newUser, this.props.history);\n  }\n\n  render() {\n    const {\n      errors\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col s8 offset-s2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: \"/\",\n      className: \"btn-flat waves-effect\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"material-icons left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 15\n      }\n    }, \"keyboard_backspace\"), \" Back to home\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col s12\",\n      style: {\n        paddingLeft: \"11.250px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }\n    }, \"Register\"), \" below\"), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"grey-text text-darken-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 15\n      }\n    }, \"Already have an account? \", /*#__PURE__*/React.createElement(Link, {\n      to: \"/login\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 42\n      }\n    }, \"Log in\"))), /*#__PURE__*/React.createElement(\"form\", {\n      noValidate: true,\n      onSubmit: this.onSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-field col s12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      onChange: this.onChange,\n      value: this.state.username,\n      error: errors.username,\n      id: \"username\",\n      type: \"text\",\n      className: classnames(\"\", {\n        invalid: errors.username\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"username\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 17\n      }\n    }, \"Name\"), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"red-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 17\n      }\n    }, errors.username)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-field col s12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      onChange: this.onChange,\n      value: this.state.email,\n      error: errors.email,\n      id: \"email\",\n      type: \"email\",\n      className: classnames(\"\", {\n        invalid: errors.email\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"email\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 17\n      }\n    }, \"Email\"), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"red-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 17\n      }\n    }, errors.email)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      id: \"autocomplete\",\n      className: \"input-field\",\n      ref: \"input\",\n      type: \"text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"search-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 17\n      }\n    }, \"street address: \"), /*#__PURE__*/React.createElement(\"input\", {\n      name: \"streetAddress\",\n      type: \"text\",\n      className: \"form-control\",\n      value: this.state.streetAddress,\n      onChange: this.onChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"search-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 17\n      }\n    }, \"city: \"), /*#__PURE__*/React.createElement(\"input\", {\n      name: \"city\",\n      type: \"text\",\n      className: \"form-control\",\n      value: this.state.city,\n      onChange: this.onChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"search-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 17\n      }\n    }, \"state: \"), /*#__PURE__*/React.createElement(\"input\", {\n      name: \"state\",\n      type: \"text\",\n      className: \"form-control\",\n      value: this.state.state,\n      onChange: this.onChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"search-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 17\n      }\n    }, \"zipcode: \"), /*#__PURE__*/React.createElement(\"input\", {\n      name: \"zipcode\",\n      type: \"text\",\n      className: \"form-control\",\n      value: this.state.zipcode,\n      onChange: this.onChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-field col s12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      onChange: this.onChange,\n      value: this.state.confirm,\n      error: errors.confirm,\n      id: \"confirm\",\n      type: \"password\",\n      className: classnames(\"\", {\n        invalid: errors.confirm\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"password2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 17\n      }\n    }, \"Confirm Password\"), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"red-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 17\n      }\n    }, errors.confirm)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col s12\",\n      style: {\n        paddingLeft: \"11.250px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      style: {\n        width: \"150px\",\n        borderRadius: \"3px\",\n        letterSpacing: \"1.5px\",\n        marginTop: \"1rem\"\n      },\n      type: \"submit\",\n      className: \"btn btn-large waves-effect waves-light hoverable blue accent-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 17\n      }\n    }, \"Sign up\"))))));\n  }\n\n}\n\nRegister.propTypes = {\n  registerUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  errors: state.errors\n});\n\nexport default connect(mapStateToProps, {\n  registerUser\n})(withRouter(Register));","map":{"version":3,"sources":["/Users/brianli/Desktop/covid-19-app/covid-19-app/covid_19_hackathon_app/src/Components/Auth/register.js"],"names":["React","Component","Link","withRouter","PropTypes","connect","registerUser","classnames","Register","constructor","onChange","bind","onSubmit","autocomplete","handlePlaceSelect","state","username","email","streetAddress","city","zipcode","password","confirm","errors","componentDidMount","window","google","maps","places","Autocomplete","document","getElementById","addListener","props","auth","isAuthenticated","history","push","location","getDerivedStateFromProps","nextProps","prevState","componentDidUpdate","prevProps","addressObject","getPlace","address","address_components","results","zip","i","length","types","long_name","short_name","setState","e","target","id","value","preventDefault","newUser","render","paddingLeft","invalid","width","borderRadius","letterSpacing","marginTop","propTypes","func","isRequired","object","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { registerUser } from \"../../actions/authActions\";\nimport classnames from \"classnames\";\n\nclass Register extends Component {\n  constructor() {\n    super();\n\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n    this.autocomplete = null;\n    this.handlePlaceSelect = this.handlePlaceSelect.bind(this);\n\n    this.state = {\n      username: \"\",\n      email: \"\",\n      streetAddress: \"\",\n      city: \"\",\n      state: \"\",\n      zipcode: \"\",\n      password: \"\",\n      confirm: \"\",\n      errors: {}\n    };\n  }\n\n  componentDidMount() {\n    this.autocomplete = new window.google.maps.places.Autocomplete(document.getElementById('autocomplete'), {})\n    this.autocomplete.addListener(\"place_changed\", this.handlePlaceSelect)\n    // If logged in and user navigates to Register page, should redirect them to dashboard\n    if (this.props.auth.isAuthenticated) {\n      this.props.history.push(\"/login\");\n      window.location = '/login';\n    }\n  }\n\n\n  static getDerivedStateFromProps(nextProps, prevState){\n    if(nextProps.errors){\n      return true;\n    }\n    else return null;\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.props.auth.isAuthenticated) {\n      this.props.history.push(\"/login\");\n      window.location = '/login';\n    }\n  }\n\n  handlePlaceSelect() {\n    let addressObject = this.autocomplete.getPlace()\n    let address = addressObject.address_components\n    var results = [];\n    var city = \"locality\";\n    var state = \"administrative_area_level_1\";\n    var zip = \"postal_code\";\n\n    for (var i=0 ; i < address.length ; i++) {\n      if (address[i].types[0] == city) {\n        results.push(address[i].long_name);\n      }\n      else if (address[i].types[0] == state) {\n        results.push(address[i].short_name);\n      }\n      else if (address[i].types[0] == zip) {\n        results.push(address[i].long_name);\n      }\n    }\n    this.setState({\n      streetAddress: `${address[0].long_name} ${address[1].long_name}`,\n      city: results[0],\n      state: results[1],\n      zipcode: results[2],\n    })\n  }\n\n  onChange(e) {\n    this.setState({ [e.target.id]: e.target.value });\n  };\n\n  onSubmit(e) {\n    e.preventDefault();\n    const newUser = {\n      username: this.state.username,\n      email: this.state.email,\n      streetAddress: this.state.streetAddress,\n      city: this.state.city,\n      state: this.state.state,\n      zipcode: this.state.zipcode,\n      password: this.state.password,\n      confirm: this.state.confirm\n    };\n    this.props.registerUser(newUser, this.props.history);\n  };\n\n  render() {\n    const { errors } = this.state;\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col s8 offset-s2\">\n            <Link to=\"/\" className=\"btn-flat waves-effect\">\n              <i className=\"material-icons left\">keyboard_backspace</i> Back to\n              home\n            </Link>\n            <div className=\"col s12\" style={{ paddingLeft: \"11.250px\" }}>\n              <h4>\n                <b>Register</b> below\n              </h4>\n              <p className=\"grey-text text-darken-1\">\n                Already have an account? <Link to=\"/login\">Log in</Link>\n              </p>\n            </div>\n            <form noValidate onSubmit={this.onSubmit}>\n              <div className=\"input-field col s12\">\n                <input\n                  onChange={this.onChange}\n                  value={this.state.username}\n                  error={errors.username}\n                  id=\"username\"\n                  type=\"text\"\n                  className={classnames(\"\", {\n                    invalid: errors.username\n                  })}\n                />\n                <label htmlFor=\"username\">Name</label>\n                <span className=\"red-text\">{errors.username}</span>\n              </div>\n              <div className=\"input-field col s12\">\n                <input\n                  onChange={this.onChange}\n                  value={this.state.email}\n                  error={errors.email}\n                  id=\"email\"\n                  type=\"email\"\n                  className={classnames(\"\", {\n                    invalid: errors.email\n                  })}\n                />\n                <label htmlFor=\"email\">Email</label>\n                <span className=\"red-text\">{errors.email}</span>\n              </div>\n              <div className=\"form-group\">\n                <input id=\"autocomplete\" className=\"input-field\" ref=\"input\" type=\"text\"/>\n                <div className=\"search-title\">street address: </div>\n                <input\n                  name=\"streetAddress\"\n                  type=\"text\"\n                  className=\"form-control\"\n                  value={this.state.streetAddress}\n                  onChange={this.onChange}\n                />\n              </div>\n              <div className=\"form-group\">\n                <div className=\"search-title\">city: </div>\n                <input\n                  name=\"city\"\n                  type=\"text\"\n                  className=\"form-control\"\n                  value={this.state.city}\n                  onChange={this.onChange}\n                />\n              </div>\n              <div className=\"form-group\">\n                <div className=\"search-title\">state: </div>\n                <input\n                  name=\"state\"\n                  type=\"text\"\n                  className=\"form-control\"\n                  value={this.state.state}\n                  onChange={this.onChange}\n                />\n              </div>\n              <div className=\"form-group\">\n                <div className=\"search-title\">zipcode: </div>\n                <input\n                  name=\"zipcode\"\n                  type=\"text\"\n                  className=\"form-control\"\n                  value={this.state.zipcode}\n                  onChange={this.onChange}\n                />\n              </div>\n              <div className=\"input-field col s12\">\n                <input\n                  onChange={this.onChange}\n                  value={this.state.confirm}\n                  error={errors.confirm}\n                  id=\"confirm\"\n                  type=\"password\"\n                  className={classnames(\"\", {\n                    invalid: errors.confirm\n                  })}\n                />\n                <label htmlFor=\"password2\">Confirm Password</label>\n                <span className=\"red-text\">{errors.confirm}</span>\n              </div>\n              <div className=\"col s12\" style={{ paddingLeft: \"11.250px\" }}>\n                <button\n                  style={{\n                    width: \"150px\",\n                    borderRadius: \"3px\",\n                    letterSpacing: \"1.5px\",\n                    marginTop: \"1rem\"\n                  }}\n                  type=\"submit\"\n                  className=\"btn btn-large waves-effect waves-light hoverable blue accent-3\"\n                >\n                  Sign up\n                </button>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nRegister.propTypes = {\n  registerUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  errors: state.errors\n});\n\nexport default connect(\n  mapStateToProps,\n  { registerUser }\n)(withRouter(Register));\n"]},"metadata":{},"sourceType":"module"}